import { config } from 'dotenv'
import axios from 'axios'
import { AI_EXENTD_MESSAGE } from '../constants/messages.js'

config()

class AiService {
    async generateCampaignContent({ title, description, location, startDate, endDate, tone }) {
        const prompt = `
Vi·∫øt m·ªôt b√†i ƒëƒÉng Facebook ng·∫Øn (~100 t·ª´), b·∫±ng ti·∫øng Vi·ªát, gi·ªçng vƒÉn ${tone}, cho chi·∫øn d·ªãch thi·ªán nguy·ªán sau:
- T√™n chi·∫øn d·ªãch: ${title}
- M√¥ t·∫£ chi·∫øn d·ªãch: ${description}
- ƒê·ªãa ƒëi·ªÉm: ${location}
- Th·ªùi gian: t·ª´ ${startDate} ƒë·∫øn ${endDate}
N·ªôi dung c·∫ßn truy·ªÅn t·∫£i c·∫£m x√∫c, k√™u g·ªçi c·ªông ƒë·ªìng c√πng tham gia.
        `
        try {
            const response = await axios.post(
                'https://api.openai.com/v1/chat/completions',
                {
                    model: 'gpt-3.5-turbo',
                    messages: [
                        { role: 'system', content: 'B·∫°n l√† m·ªôt chuy√™n gia vi·∫øt n·ªôi dung thi·ªán nguy·ªán chuy√™n nghi·ªáp.' },
                        { role: 'user', content: prompt }
                    ],
                    max_tokens: 300,
                    temperature: 0.8
                },
                {
                    headers: {
                        Authorization: `Bearer ${process.env.GPT_API_KEY}`,
                        'Content-Type': 'application/json'
                    }
                }
            )

            return response.data.choices[0]?.message?.content?.trim() || AI_EXENTD_MESSAGE.ERROR_IN_CONTENT
        } catch (error) {
            console.error('AI Error:', error?.response?.data || error.message)
            return AI_EXENTD_MESSAGE.ERROR_IN_CONTENT
        }
    }
    async generateThankYouEmail({ recipientName,
        campaignName,
        contributionDetails,
        senderName,
        tone = 'th√¢n thi·ªán',
        evaluationText = '' }) {
        const prompt = `
Vi·∫øt m·ªôt email c·∫£m ∆°n b·∫±ng ti·∫øng Vi·ªát, x∆∞ng h√¥ l√† "b·∫°n", gi·ªçng vƒÉn ${tone}.
G·ª≠i t·ªõi ${recipientName} v√¨ ƒë√£ ${contributionDetails} trong chi·∫øn d·ªãch "${campaignName}".

H√£y nh·∫•n m·∫°nh r·∫±ng: üéñÔ∏è ${evaluationText} ‚Äì n√™n ƒë·∫∑t ri√™ng th√†nh m·ªôt c√¢u ho·∫∑c d√≤ng d·ªÖ nh√¨n th·∫•y.

Email n√™n ch√¢n th√†nh, kho·∫£ng 120‚Äì150 t·ª´, d·ªÖ ƒë·ªçc, c√≥ th·ªÉ k·∫øt th√∫c b·∫±ng l·ªùi c·∫£m ∆°n v√† t√™n ng∆∞·ªùi g·ª≠i l√† ${senderName}.
`;

        try {
            const response = await axios.post(
                'https://api.openai.com/v1/chat/completions',
                {
                    model: 'gpt-3.5-turbo',
                    messages: [
                        { role: 'system', content: 'B·∫°n l√† m·ªôt chuy√™n gia vi·∫øt email c·∫£m ∆°n thi·ªán nguy·ªán b·∫±ng ti·∫øng Vi·ªát.' },
                        { role: 'user', content: prompt }
                    ],
                    max_tokens: 300,
                    temperature: 0.7
                },
                {
                    headers: {
                        Authorization: `Bearer ${process.env.GPT_API_KEY}`,
                        'Content-Type': 'application/json'
                    }
                }
            )

            return response.data.choices[0]?.message?.content?.trim()
        } catch (error) {
            console.error('AI Error (Email):', error?.response?.data || error.message)
            return 'C·∫£m ∆°n b·∫°n ƒë√£ tham gia chi·∫øn d·ªãch.'
        }
    }
}

export default new AiService()